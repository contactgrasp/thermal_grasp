"""
constructs the self intersection potential matrix for hand model
"""

import numpy as np
import matplotlib.pyplot as plt

output_filename = 'intersection_potential_matrix.txt'

# human hand
A = np.asarray([
  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],  # palm
  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],  # index1
  [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],  # index2
  [1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0],  # index3
  [0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0],  # middle1
  [1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0],  # middle2
  [1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0],  # middle3
  [0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0],  # ring1
  [1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0],  # ring2
  [1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0],  # ring3
  [0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0],  # little1
  [1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0],  # little2
  [1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0],  # little3
  [0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0],  # thumb1
  [1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0],  # thumb2
  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0],  # thumb3
])

# allegro
A = np.asarray([
  [0,0,0,0,0,0,0,0,0,0,0,0,0],  # palm
  [0,0,0,0,0,0,0,0,0,0,0,0,0],  # index1
  [1,0,0,0,0,0,0,0,0,0,0,0,0],  # index2
  [1,1,0,0,0,0,0,0,0,0,0,0,0],  # index3
  [0,1,1,1,0,0,0,0,0,0,0,0,0],  # middle1
  [1,1,1,1,0,0,0,0,0,0,0,0,0],  # middle2
  [1,1,1,1,1,0,0,0,0,0,0,0,0],  # middle3
  [0,1,1,1,1,1,1,0,0,0,0,0,0],  # ring1
  [1,1,1,1,1,1,1,0,0,0,0,0,0],  # ring2
  [1,1,1,1,1,1,1,1,0,0,0,0,0],  # ring3
  [0,1,1,1,1,1,1,1,1,1,0,0,0],  # thumb1
  [1,1,1,1,1,1,1,1,1,1,0,0,0],  # thumb2
  [1,1,1,1,1,1,1,1,1,1,1,0,0],  # thumb3
])

# barrett
A = np.asarray([
  [0,0,0,0,0,0,0,0,0],  # palm
  [0,0,0,0,0,0,0,0,0],  # link1_1
  [1,0,0,0,0,0,0,0,0],  # link1_2
  [1,1,0,0,0,0,0,0,0],  # link1_3
  [0,1,1,1,0,0,0,0,0],  # link2_1
  [1,1,1,1,0,0,0,0,0],  # link2_2
  [1,1,1,1,1,0,0,0,0],  # link2_3
  [0,1,1,1,1,1,1,0,0],  # link3_1
  [1,1,1,1,1,1,1,0,0],  # link3_2
])

A = A + A.T
plt.imshow(A)
plt.show()
print(A)
np.savetxt(output_filename, A, fmt="%d")
print('Saved to {:s}'.format(output_filename))
